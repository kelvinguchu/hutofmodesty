/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    subcategories: Subcategory;
    clothing: Clothing;
    footwear: Footwear;
    fragrances: Fragrance;
    accessories: Accessory;
    orders: Order;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    subcategories: SubcategoriesSelect<false> | SubcategoriesSelect<true>;
    clothing: ClothingSelect<false> | ClothingSelect<true>;
    footwear: FootwearSelect<false> | FootwearSelect<true>;
    fragrances: FragrancesSelect<false> | FragrancesSelect<true>;
    accessories: AccessoriesSelect<false> | AccessoriesSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  /**
   * Upload a profile photo
   */
  profilePhoto?: (string | null) | Media;
  /**
   * User's saved cart items
   */
  cart?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * User's saved wishlist items
   */
  wishlist?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * User's mobile/phone number
   */
  phone?: string | null;
  /**
   * User's saved shipping address
   */
  savedShippingAddress?: {
    /**
     * Street address
     */
    address?: string | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Country
     */
    country?: string | null;
    /**
     * Postal/ZIP code
     */
    postalCode?: string | null;
  };
  /**
   * User role for access control
   */
  role: 'customer' | 'admin';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  _key?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name: string;
  /**
   * URL-friendly version of the name (e.g., "clothing", "accessories")
   */
  slug: string;
  description?: string | null;
  featured?: boolean | null;
  /**
   * Order to display the category (lower numbers appear first)
   */
  displayOrder?: number | null;
  /**
   * Main category image for display on homepage and collection pages
   */
  image: string | Media;
  /**
   * Optional larger banner image for category page headers
   */
  bannerImage?: (string | null) | Media;
  /**
   * Subcategories associated with this main category
   */
  subcategories?: (string | Subcategory)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subcategories".
 */
export interface Subcategory {
  id: string;
  name: string;
  /**
   * URL-friendly version of the name (e.g., "classic", "modern")
   */
  slug: string;
  /**
   * The main category this subcategory belongs to
   */
  category: string | Category;
  description?: string | null;
  /**
   * Order to display the subcategory (lower numbers appear first)
   */
  displayOrder?: number | null;
  /**
   * Image for the subcategory
   */
  image?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clothing".
 */
export interface Clothing {
  id: string;
  name: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  price: number;
  /**
   * Auto-filled with 'Clothing' category (can be changed if needed)
   */
  category: string | Category;
  /**
   * Select clothing subcategory (Abayas, Dresses, Dirac)
   */
  subcategory?: (string | null) | Subcategory;
  status: 'active' | 'draft' | 'out-of-stock';
  trending?: boolean | null;
  mainImage: string | Media;
  color: string;
  /**
   * Hex code or color name for the main color
   */
  colorCode?: string | null;
  colorVariations?:
    | {
        color: string;
        colorCode?: string | null;
        image: string | Media;
        additionalImages?:
          | {
              image: string | Media;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  sizeVariations?:
    | {
        size: 'S' | 'M' | 'L' | 'XL' | 'XXL';
        inStock?: boolean | null;
        id?: string | null;
      }[]
    | null;
  heightRanges?:
    | {
        min: number;
        max: number;
        /**
         * E.g., "Short", "Regular", "Tall"
         */
        label: string;
        id?: string | null;
      }[]
    | null;
  /**
   * e.g., Cotton, Silk, Polyester blend
   */
  fabric?: string | null;
  /**
   * How to care for this garment
   */
  careInstructions?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footwear".
 */
export interface Footwear {
  id: string;
  name: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  price: number;
  /**
   * Auto-filled with 'Footwear' category (can be changed if needed)
   */
  category: string | Category;
  /**
   * Select footwear subcategory (Shoes, etc.)
   */
  subcategory?: (string | null) | Subcategory;
  status: 'active' | 'draft' | 'out-of-stock';
  trending?: boolean | null;
  mainImage: string | Media;
  /**
   * Starting size (e.g., 35)
   */
  sizeFrom: number;
  /**
   * Ending size (e.g., 42). Use same as 'Size From' for single size
   */
  sizeTo: number;
  /**
   * e.g., Leather, Canvas, Synthetic
   */
  material?: string | null;
  /**
   * e.g., Flats, Heels, Boots, Sandals, Sneakers
   */
  shoeType?: string | null;
  /**
   * How to care for this footwear
   */
  careInstructions?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fragrances".
 */
export interface Fragrance {
  id: string;
  name: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  price: number;
  /**
   * Auto-filled with 'Fragrances' category (can be changed if needed)
   */
  category: string | Category;
  /**
   * Select fragrance subcategory (Perfumes, Bakhoor, etc.)
   */
  subcategory?: (string | null) | Subcategory;
  status: 'active' | 'draft' | 'out-of-stock';
  trending?: boolean | null;
  mainImage: string | Media;
  /**
   * Enter the volume amount (unit selected below)
   */
  volume: number;
  volumeUnit: 'ml' | 'oz' | 'g';
  longevity?: ('light' | 'moderate' | 'long' | 'very-long') | null;
  targetGender?: ('men' | 'women' | 'unisex') | null;
  occasion?: ('daily' | 'evening' | 'special' | 'office' | 'seasonal') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accessories".
 */
export interface Accessory {
  id: string;
  name: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  price: number;
  /**
   * Auto-filled with 'Accessories' category (can be changed if needed)
   */
  category: string | Category;
  /**
   * Select accessory subcategory (Jewelry, Bags, etc.)
   */
  subcategory?: (string | null) | Subcategory;
  status: 'active' | 'draft' | 'out-of-stock';
  trending?: boolean | null;
  mainImage: string | Media;
  accessoryType: 'jewelry' | 'bag' | 'scarf' | 'belt' | 'watch' | 'sunglasses' | 'hair' | 'other';
  /**
   * Select applicable sizes for this accessory
   */
  availableSizes?: ('S' | 'M' | 'L' | 'XL' | 'XXL')[] | null;
  /**
   * Only for jewelry items
   */
  jewelryType?: ('necklace' | 'earrings' | 'bracelet' | 'ring' | 'brooch' | 'anklet' | 'other') | null;
  /**
   * Only for jewelry items
   */
  metalType?: ('gold' | 'silver' | 'rose-gold' | 'platinum' | 'stainless-steel' | 'alloy' | 'other') | null;
  /**
   * How to care for this accessory
   */
  careInstructions?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  /**
   * Unique order identifier
   */
  orderNumber: string;
  customer: {
    firstName: string;
    lastName: string;
    email: string;
    phone: string;
  };
  shippingAddress: {
    address: string;
    city: string;
    country: string;
    postalCode: string;
  };
  items: {
    productId: string;
    name: string;
    price: number;
    quantity: number;
    image?: string | null;
    id?: string | null;
  }[];
  subtotal: number;
  shippingFee?: number | null;
  total: number;
  status: 'pending' | 'processing' | 'paid' | 'shipped' | 'delivered' | 'cancelled';
  payment: {
    method: 'card' | 'mpesa' | 'bank';
    /**
     * Payment provider transaction ID
     */
    transactionId?: string | null;
    status?: ('pending' | 'processing' | 'complete' | 'failed') | null;
    /**
     * Additional payment details from provider
     */
    details?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'subcategories';
        value: string | Subcategory;
      } | null)
    | ({
        relationTo: 'clothing';
        value: string | Clothing;
      } | null)
    | ({
        relationTo: 'footwear';
        value: string | Footwear;
      } | null)
    | ({
        relationTo: 'fragrances';
        value: string | Fragrance;
      } | null)
    | ({
        relationTo: 'accessories';
        value: string | Accessory;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  profilePhoto?: T;
  cart?: T;
  wishlist?: T;
  phone?: T;
  savedShippingAddress?:
    | T
    | {
        address?: T;
        city?: T;
        country?: T;
        postalCode?: T;
      };
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  _key?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  featured?: T;
  displayOrder?: T;
  image?: T;
  bannerImage?: T;
  subcategories?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subcategories_select".
 */
export interface SubcategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  category?: T;
  description?: T;
  displayOrder?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clothing_select".
 */
export interface ClothingSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?: T;
  category?: T;
  subcategory?: T;
  status?: T;
  trending?: T;
  mainImage?: T;
  color?: T;
  colorCode?: T;
  colorVariations?:
    | T
    | {
        color?: T;
        colorCode?: T;
        image?: T;
        additionalImages?:
          | T
          | {
              image?: T;
              id?: T;
            };
        id?: T;
      };
  sizeVariations?:
    | T
    | {
        size?: T;
        inStock?: T;
        id?: T;
      };
  heightRanges?:
    | T
    | {
        min?: T;
        max?: T;
        label?: T;
        id?: T;
      };
  fabric?: T;
  careInstructions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footwear_select".
 */
export interface FootwearSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?: T;
  category?: T;
  subcategory?: T;
  status?: T;
  trending?: T;
  mainImage?: T;
  sizeFrom?: T;
  sizeTo?: T;
  material?: T;
  shoeType?: T;
  careInstructions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fragrances_select".
 */
export interface FragrancesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?: T;
  category?: T;
  subcategory?: T;
  status?: T;
  trending?: T;
  mainImage?: T;
  volume?: T;
  volumeUnit?: T;
  longevity?: T;
  targetGender?: T;
  occasion?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accessories_select".
 */
export interface AccessoriesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?: T;
  category?: T;
  subcategory?: T;
  status?: T;
  trending?: T;
  mainImage?: T;
  accessoryType?: T;
  availableSizes?: T;
  jewelryType?: T;
  metalType?: T;
  careInstructions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  customer?:
    | T
    | {
        firstName?: T;
        lastName?: T;
        email?: T;
        phone?: T;
      };
  shippingAddress?:
    | T
    | {
        address?: T;
        city?: T;
        country?: T;
        postalCode?: T;
      };
  items?:
    | T
    | {
        productId?: T;
        name?: T;
        price?: T;
        quantity?: T;
        image?: T;
        id?: T;
      };
  subtotal?: T;
  shippingFee?: T;
  total?: T;
  status?: T;
  payment?:
    | T
    | {
        method?: T;
        transactionId?: T;
        status?: T;
        details?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}